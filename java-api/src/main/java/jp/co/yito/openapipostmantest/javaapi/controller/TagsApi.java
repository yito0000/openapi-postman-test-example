/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package jp.co.yito.openapipostmantest.javaapi.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import java.util.List;
import jp.co.yito.openapipostmantest.javaapi.controller.model.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2020-11-25T02:40:19.045642+09:00[Asia/Tokyo]")
@Validated
@Api(value = "tags", description = "the tags API")
public interface TagsApi {

  /**
   * GET /tags : タグ一覧取得API タグリストを取得します
   *
   * @return OK (status code 200) or 無効なAPI KEYです (status code 400)
   */
  @ApiOperation(
      value = "タグ一覧取得API",
      nickname = "tagsGet",
      notes = "タグリストを取得します",
      response = Tag.class,
      responseContainer = "List",
      authorizations = {@Authorization(value = "api_key")},
      tags = {
        "その他",
      })
  @ApiResponses(
      value = {
        @ApiResponse(code = 200, message = "OK", response = Tag.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "無効なAPI KEYです")
      })
  @RequestMapping(
      value = "/tags",
      produces = {"application/json"},
      method = RequestMethod.GET)
  ResponseEntity<List<Tag>> tagsGet();
}
